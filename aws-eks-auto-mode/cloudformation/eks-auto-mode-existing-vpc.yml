Description: 'EKS Cluster for Dremio (EKS Auto Mode)'
Parameters:
  UseSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: "Subnet to deploy the cluster into. Please use private subnets in the same VPC."
  EksVersion:
    Type: String
    Description: "AWS EKS Version."
    Default: "1.32"
  EksServiceIpv4Cidr:
    Type: String
    Description: "AWS EKS Service CIDR."
    Default: "10.100.0.0/16"
  EksPublicEndpoint:
    Type: String
    Description: "AWS EKS Public Endpoint"
    Default: true
    AllowedValues: [true, false]
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: EKS Cluster for Dremio (EKS Auto Mode)
        Parameters:
          - UseSubnets
          - EksVersion
          - EksServiceIpv4Cidr
          - EksPublicEndpoint
    ParameterLabels:
      UseSubnets:
        default: "Deploy to Subnets (select the private subnets)"
      EksVersion:
        default: "EKS Version"
      EksServiceIpv4Cidr:
        default: "EKS Service IPv4 CIDR (use the default if unclear)"
      EksPublicEndpoint:
        default: "If EKS KubeAPI will provide a public endpoint."

Resources:
  IAMRoleAmazonEKSAutoClusterRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSNetworkingPolicy
        - arn:aws:iam::aws:policy/AmazonEKSBlockStoragePolicy
        - arn:aws:iam::aws:policy/AmazonEKSLoadBalancingPolicy
        - arn:aws:iam::aws:policy/AmazonEKSComputePolicy
      MaxSessionDuration: 3600
      RoleName: !Join ["-", ["AmazonEKSAutoClusterRole", !Ref "AWS::StackName"]]
      Description: Allows access to other AWS service resources that are required to
        operate Auto Mode clusters managed by EKS.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
              - sts:TagSession
            Effect: Allow
            Principal:
              Service: eks.amazonaws.com
  IAMRoleAmazonEKSAutoNodeRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPullOnly
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodeMinimalPolicy
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      MaxSessionDuration: 3600
      RoleName: !Join ["-", ["AmazonEKSAutoNodeRole", !Ref "AWS::StackName"]]
      Description: Allows EKS nodes to connect to EKS Auto Mode clusters and to pull
        container images from ECR.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Logging:
        ClusterLogging:
          EnabledTypes:
            - Type: api
            - Type: audit
            - Type: authenticator
            - Type: controllerManager
            - Type: scheduler
      ComputeConfig:
        Enabled: true
        NodeRoleArn: !GetAtt IAMRoleAmazonEKSAutoNodeRole.Arn
        NodePools:
          - system
          - general-purpose
      UpgradePolicy:
        SupportType: STANDARD
      StorageConfig:
        BlockStorage:
          Enabled: true
      Version: !Ref EksVersion
      ZonalShiftConfig:
        Enabled: true
      AccessConfig:
        AuthenticationMode: API
      EncryptionConfig: []
      KubernetesNetworkConfig:
        ServiceIpv4Cidr: !Ref EksServiceIpv4Cidr
        ElasticLoadBalancing:
          Enabled: true
        IpFamily: ipv4
      RoleArn: !GetAtt IAMRoleAmazonEKSAutoClusterRole.Arn
      ResourcesVpcConfig:
        EndpointPublicAccess: !Ref EksPublicEndpoint
        PublicAccessCidrs:
          - 0.0.0.0/0
        SecurityGroupIds: []
        SubnetIds: !Ref UseSubnets
        EndpointPrivateAccess: true
      Name: !Ref "AWS::StackName"
  S3BucketDremioDist:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: !Join ["-", [!Ref "AWS::StackName", "dist"]]
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
Outputs:
  ClusterName:
    Description: EKS cluster name
    Value: !Ref AWS::StackName
  ClusterCredentialsCommand:
    Description: The command to retrieve the cluster credentials
    Value: !Sub aws eks update-kubeconfig --region ${AWS::Region} --name ${AWS::StackName}
  DremioDistributedStorageBucket:
    Description: Dremio distributed storage bucket name (please put into Helm values.yml)
    Value: !Sub ${AWS::StackName}-dist
